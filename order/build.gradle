/*plugins {
    id 'com.android.application'
}*/

def isRelease = rootProject.ext.isRelease

def androidId = rootProject.ext.app

def appId = rootProject.ext.appId

if (isRelease){
    apply plugin : 'com.android.library'
}else{
    apply plugin : 'com.android.application'
}


android {
    compileSdkVersion androidId.compileSdkVersion
    buildToolsVersion androidId.buildToolsVersion

    defaultConfig {
        if (!isRelease){
            applicationId appId.order
        }

        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 只能在defaultConfig或buildTypes里添加BuildConfig参数，三个参数分别为：类型，变量名，变量值
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
    }

    // 资源增加前缀
    resourcePrefix "order_"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets{
        main{
            if(!isRelease){
                // 组件化，用debug的文件
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }else{
                // 集成，整个项目打包成apk
                manifest.srcFile 'src/main/AndroidManifest.xml'
                // 去掉debug的代码
                java{
                    exclude '**/debug/**'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

  /*  implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'*/
    rootProject.ext.dependency.each{
        k,v ->
            implementation v
    }
    rootProject.ext.testDependency.each{
        k, v -> testImplementation v
    }
    rootProject.ext.androidTestDependency.each{
        k, v ->
            androidTestImplementation v
    }
    implementation project(":library")
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
apply plugin: 'kotlin-android'
repositories {
    mavenCentral()
}