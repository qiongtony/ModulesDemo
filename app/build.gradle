plugins {
    id 'com.android.application'
}

def app = rootProject.ext.app

def depend = rootProject.ext.dependency

def url = rootProject.ext.url

println "hello world!"

android {
    compileSdkVersion app.compileSdkVersion
    buildToolsVersion app.buildToolsVersion

    defaultConfig {
        applicationId app.applicationId
        minSdkVersion app.minSdkVersion
        targetSdkVersion app.targetSdkVersion
        versionCode app.versionCode
        versionName app.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 开启分包
        multiDexEnabled true

        // 源集
        sourceSets{
            main{
                if(!isRelease){
                    manifest.srcFile  'src/main/AndroidManifest.xml'
                    java.srcDirs = ['src/main/java']
                    res.srcDirs = ['src/main/res']
                    resources.srcDirs = ['src/main/resources']
                    aidl.srcDirs = ['src/main/aidl']
                    assets.srcDirs = ['src/main/assets']
                }else{
                    // 集成化模块，整个项目打包
                    manifest.srcFile 'src/main/AndroidManifest.xml'
                }
            }
        }
    }

    buildTypes {
        debug{
            // 创建自定义的BuildConfig属性
            buildConfigField("String", "host", "${url.debug}")
            minifyEnabled false
        }

        release {
            // 创建自定义的BuildConfig属性
            buildConfigField("String", "host", "${url.release}")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
   /* // 标准写法
    implementation group : "androidx.appcompat", name: "appcompat", version : "1.1.0"*/
   /* implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'*/

   /* // 方式1、获取key获取map的一个个value
    implementation depend.appcompat
    implementation depend.material
    implementation depend.constraintlayout
    implementation depend.recyclerview*/

    // 方式2：简便写法，建立map
    depend.each {
        k, v -> implementation v
    }

    // testImplementation依赖
    rootProject.ext.testDependency.each{
        k, v -> testImplementation v
    }

    // androidTestImplementation依赖
    rootProject.ext.androidTestDependency.each{
        k, v ->
            androidTestImplementation v
    }

    if (isRelease){
        implementation project(":order")
        implementation project(":common")
    }
    implementation project(":library")


    /*testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'*/
}